// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin, available for shared
// and default mode
@include host-component-properties;

:host {
  .overlay-hidden {
    display: none;
  }

}

.toast-wrapper {
  // temporary -2 rem for storybook only
  width: calc(100vw - 2rem);
  height: calc(100vh - 2rem);
  contain: content;
}
.toast {
  &.toast-item--visible {
    display: flex;
  }
  &.toast-item--hidden {
    display: none;
  }
  flex-direction: column;
  align-items: flex-start;
  position: fixed;

  @include text-xs--bold;
  --color-default-text: var(--color-white-default);
  padding-block: pxToRem(var(--spacing-responsive-xxxs-zero));
  padding-inline: pxToRem(var(--spacing-responsive-xs-zero));
  width: calc(100% - (2 * pxToRem(var(--spacing-responsive-s-zero))));
  margin: pxToRem(var(--spacing-responsive-s-zero)) 0;
  @include mq($from: small) {
    width: 400px;
  }
  @include mq($from: medium) {
    font-size: pxToRem(var(--typo-scale-0-875x));
    padding-block: pxToRem(var(--spacing-responsive-xxxs-medium));
    padding-inline: pxToRem(var(--spacing-responsive-xs-medium));
    margin: pxToRem(var(--spacing-responsive-s-medium));
  }

  // default position is bottom-center
  left: 50%;
  transform: translateX(-50%);
  bottom: 0;
  @include mq($from: medium) {
    margin: pxToRem(var(--spacing-responsive-s-medium)) 0;
  }
  &.toast-top {
    top: 0;
    bottom: auto;
  }
  &.toast-left {
    left: pxToRem(var(--spacing-responsive-s-zero));
    transform: none;
    @include mq($from: medium) {
      left: pxToRem(var(--spacing-responsive-s-medium));
    }
  }
  &.toast-right {
    right: pxToRem(var(--spacing-responsive-s-zero));
    left: auto;
    transform: none;
    @include mq($from: medium) {
      right: pxToRem(var(--spacing-responsive-s-medium));
    }
  }

  background: var(--color-midnight-default);
  @include shadow-level-5-hard;
  border-radius: pxToRem(var(--spacing-fixed-2x));

  display: flex;
  flex-direction: row;
  align-items: start;
  gap: pxToRem(var(--spacing-fixed-4x));
  span.toast-text {
    color: var(--color-default-text);
    flex-grow: 1;
  }
  .toast-icon {
    color: var(--color-default-text);
    flex: 0 0 19px; //width
    height: 19px;
    align-self: start;
    fill: currentColor;
    margin-right: pxToRem(var(--spacing-fixed-2x));
    @include mq($from: medium) {
      flex: 0 0 23.8px; //width
      height: 23.8px;
    }
  }

  .toast-action {
    //color: var(--color-default-text);
    font-family: var(--typo-type-face-sbb-roman);
    font-weight: 400;
    line-height: var(--typo-line-height-body-text);
    margin-left: auto;
    cursor: pointer;
    & > a {
      color: var(--color-default-text);
      //line-height: var(--typo-line-height-body-text);
      text-decoration: none;
    }
    & > button {
      color: var(--color-default-text);
      cursor: pointer;
      background-color: transparent;
      border: 0;
      padding: 0;
      span {
        display: block;
        line-height: 1;
        svg {
          vertical-align: middle;
          fill: var(--color-white-default);
        }
      }
    }
  }
}
