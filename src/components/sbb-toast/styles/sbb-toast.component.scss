// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin, available for shared
// and default mode
@include host-component-properties;

:host {
  --color-default-text: var(--color-white-default);
  --toast-background-color: var(--color-midnight-default);
  --toast-border-radius: #{pxToRem(var(--border-radius-4x))};
  --toast-gap: #{pxToRem(var(--spacing-fixed-2x))};
  --toast-padding-block: #{pxToRem(var(--spacing-responsive-xxxs))};
  --toast-padding-inline: #{pxToRem(var(--spacing-responsive-xs))};
  --toast-margin: #{pxToRem(var(--spacing-responsive-s))};
  --toast-max-width: #{pxToRem(400)};
  --toast-width: #{calc(100% - (2 * pxToRem(var(--spacing-responsive-s-zero))))};
}

.overlay-hidden {
  display: none;
}

.toast-wrapper {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  contain: content;
  pointer-events: none;
}

.toast {
  @include text-s--bold;
  @include shadow-level-5-hard;
  @include absoluteCenterX;

  position: fixed;
  padding-block: var(--toast-padding-block);
  padding-inline: var(--toast-padding-inline);
  margin: var(--toast-margin) 0;
  width: calc(100% - (2 * pxToRem(var(--spacing-responsive-s-zero))));

  @include mq($from: small) {
    width: var(--toast-max-width);
  }

  display: flex;
  flex-direction: row;
  align-items: start;
  inset-block-end: 0;
  gap: var(--toast-gap);
  background: var(--toast-background-color);
  color: var(--color-default-text);
  border-radius: var(--toast-border-radius);

  &.toast-vertical-start {
    inset-block-start: 0;
    inset-block-end: auto;
  }

  &.toast-horizontal-start {
    inset-inline-start: var(--toast-margin);
    transform: none;
  }

  &.toast-horizontal-end {
    inset-inline-start: auto;
    inset-inline-end: var(--toast-margin);
    transform: none;
  }
}

.toast-text {
  flex-grow: 1;
}

// FIXME temporary, waiting for sbb-icon
.toast-icon {
  line-height: 0;
  align-self: start;
  fill: currentColor;
}

.toast-action, .toast-action .toast-button {
  @include text-s--regular;
  margin-left: auto;
  cursor: pointer;
  pointer-events: all;
}

.toast-link {
  color: var(--color-default-text);
  text-decoration: none;
}

.toast-button {
  @include buttonReset;
  color: var(--color-default-text);
}

.toast-link:focus-visible,
.toast-button:focus-visible {
  outline: pxToRem(var(--border-width-1x)) solid var(--color-white-default);
  outline-offset: calc(pxToRem(var(--border-width-2x)) );
}

.toast-label, .toast-close {
  display: block;
  line-height: 1;

  svg {
    vertical-align: middle;
    fill: var(--color-white-default);
  }
}
